{
  "swagger": "2.0",
  "info": {
    "title": "Flask Auth & Records API",
    "description": "API for user authentication, JWT-based login, and record management.",
    "version": "1.0.0"
  },
  "host": "127.0.0.1:5000",
  "basePath": "/",
  "schemes": ["http"],
  "paths": {
    "/register": {
      "post": {
        "summary": "Register a new user",
        "description": "Registers a user by hashing their password.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": { "type": "string" },
                "password": { "type": "string" }
              },
              "required": ["username", "password"]
            }
          }
        ],
        "responses": {
          "201": { "description": "User registered successfully" },
          "400": { "description": "User already exists or missing fields" }
        }
      }
    },
    "/login": {
      "post": {
        "summary": "Login to get JWT token",
        "description": "Authenticates a user and returns a JWT token.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": { "type": "string" },
                "password": { "type": "string" }
              },
              "required": ["username", "password"]
            }
          }
        ],
        "responses": {
          "200": { "description": "Returns JWT token" },
          "401": { "description": "Invalid credentials" }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Get all users (for debugging)",
        "description": "Fetches a list of all users.",
        "responses": {
          "200": { "description": "List of users" }
        }
      }
    },
    "/users/{user_id}": {
      "delete": {
        "summary": "Delete a user",
        "description": "Deletes a user along with all associated records.",
        "parameters": [
          {
            "name": "user_id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": { "description": "User and records deleted" },
          "403": { "description": "Unauthorized" },
          "404": { "description": "User not found" }
        }
      }
    },
    "/records": {
      "get": {
        "summary": "Get all records",
        "description": "Fetches records for the logged-in user.",
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": { "description": "List of records" }
        }
      },
      "post": {
        "summary": "Create a record",
        "description": "Creates a new record for the logged-in user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "action": { "type": "string" }
              },
              "required": ["action"]
            }
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "201": { "description": "Record created" },
          "400": { "description": "Action field required" }
        }
      }
    },
    "/records/{record_id}": {
      "delete": {
        "summary": "Delete a record",
        "description": "Deletes a record if it belongs to the logged-in user.",
        "parameters": [
          {
            "name": "record_id",
            "in": "path",
            "required": true,
            "type": "integer"
          }
        ],
        "security": [
          {
            "Bearer": []
          }
        ],
        "responses": {
          "200": { "description": "Record deleted" },
          "404": { "description": "Record not found" }
        }
      }
    }
  },
  "securityDefinitions": {
    "Bearer": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header",
      "description": "Enter your JWT token as 'Bearer <token>'"
    }
  }
}
